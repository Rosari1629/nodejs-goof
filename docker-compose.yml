version: "2"
services:
  goof:
    build: .
    container_name: goof
    environment:
      - DOCKER=1
      - MYSQL_HOST=goof-mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=acme
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MONGO_URL=mongodb://goof-mongo:27017/express-todo
    ports:
      - "3001:3001"
      - "9229:9229"
    depends_on:
      goof-mongo:
        condition: service_healthy
      goof-mysql:
        condition: service_healthy
    links:
      - goof-mongo
      - goof-mysql
    command: ["./wait-for-it.sh", "goof-mysql:3306", "--", "./wait-for-it.sh", "goof-mongo:27017", "--", "npm", "start"]
    networks:
      - goofnet

  goof-mongo:
    container_name: goof-mongo
    image: mongo:3
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - goofnet

  goof-mysql:
    container_name: goof-mysql
    image: mysql:5
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=acme
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - goofnet

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - goofnet

  zap:
    image: ghcr.io/zaproxy/zaproxy-stable
    container_name: zap
    command: zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.addrs.addr.name=.* -config api.disablekey=true
    ports:
      - "8090:8090"
    networks:
      - goofnet

networks:
  goofnet:
    driver: bridge

volumes:
  jenkins_home:
